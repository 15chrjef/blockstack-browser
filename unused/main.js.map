{"version":3,"sources":["webpack:///main.js","webpack:///webpack/bootstrap 14b9df39d2e71af3ad7c","webpack:///./main.development.js","webpack:///external \"electron\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_electron","crashReporter","start","productName","companyName","submitURL","autoSubmit","app","on","process","platform","quit","once","mainWindow","screen","getPrimaryDisplay","workAreaSize","BrowserWindow","width","height","minWidth","minHeight","frame","titleBarStyle","loadURL","__dirname","webContents","show","focus","template","label","submenu","accelerator","role","type","click","item","focusedWindow","reload","setFullScreen","isFullScreen","toggleDevTools","shell","openExternal","unshift","push","menu","Menu","buildFromTemplate","setApplicationMenu","require"],"mappings":"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","file":"./main.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _electron = __webpack_require__(1);\n\t\n\t_electron.crashReporter.start({\n\t  productName: 'Blockstack',\n\t  companyName: 'Blockstack Labs',\n\t  submitURL: 'http://127.0.0.1:3000',\n\t  autoSubmit: false\n\t});\n\t\n\tif (false) {\n\t  require('electron-debug')();\n\t}\n\t\n\t_electron.app.on('window-all-closed', function () {\n\t  if (process.platform !== 'darwin') {\n\t    _electron.app.quit();\n\t  }\n\t});\n\t\n\t_electron.app.once('ready', function () {\n\t  var size = _electron.screen.getPrimaryDisplay().workAreaSize;\n\t  var mainWindow = new _electron.BrowserWindow({\n\t    width: 1200,\n\t    height: 900,\n\t    minWidth: 1100,\n\t    minHeight: 450,\n\t    frame: false,\n\t    titleBarStyle: 'hidden'\n\t  });\n\t\n\t  mainWindow.loadURL('file://' + __dirname + '/app/app.html');\n\t\n\t  mainWindow.webContents.on('did-finish-load', function () {\n\t    mainWindow.show();\n\t    mainWindow.focus();\n\t  });\n\t\n\t  mainWindow.on('closed', function () {\n\t    mainWindow = null;\n\t  });\n\t\n\t  if (false) {\n\t    mainWindow.openDevTools();\n\t  }\n\t\n\t  var template = [{\n\t    label: 'Edit',\n\t    submenu: [{\n\t      label: 'Undo',\n\t      accelerator: 'CmdOrCtrl+Z',\n\t      role: 'undo'\n\t    }, {\n\t      label: 'Redo',\n\t      accelerator: 'Shift+CmdOrCtrl+Z',\n\t      role: 'redo'\n\t    }, {\n\t      type: 'separator'\n\t    }, {\n\t      label: 'Cut',\n\t      accelerator: 'CmdOrCtrl+X',\n\t      role: 'cut'\n\t    }, {\n\t      label: 'Copy',\n\t      accelerator: 'CmdOrCtrl+C',\n\t      role: 'copy'\n\t    }, {\n\t      label: 'Paste',\n\t      accelerator: 'CmdOrCtrl+V',\n\t      role: 'paste'\n\t    }, {\n\t      label: 'Select All',\n\t      accelerator: 'CmdOrCtrl+A',\n\t      role: 'selectall'\n\t    }]\n\t  }, {\n\t    label: 'View',\n\t    submenu: [{\n\t      label: 'Reload',\n\t      accelerator: 'CmdOrCtrl+R',\n\t      click: function click(item, focusedWindow) {\n\t        if (focusedWindow) focusedWindow.reload();\n\t      }\n\t    }, {\n\t      label: 'Toggle Full Screen',\n\t      accelerator: function () {\n\t        return process.platform === 'darwin' ? 'Ctrl+Command+F' : 'F11';\n\t      }(),\n\t      click: function click(item, focusedWindow) {\n\t        if (focusedWindow) focusedWindow.setFullScreen(!focusedWindow.isFullScreen());\n\t      }\n\t    }, {\n\t      label: 'Toggle Developer Tools',\n\t      accelerator: function () {\n\t        return process.platform === 'darwin' ? 'Alt+Command+I' : 'Ctrl+Shift+I';\n\t      }(),\n\t      click: function click(item, focusedWindow) {\n\t        if (focusedWindow) focusedWindow.toggleDevTools();\n\t      }\n\t    }]\n\t  }, {\n\t    label: 'Window',\n\t    role: 'window',\n\t    submenu: [{\n\t      label: 'Minimize',\n\t      accelerator: 'CmdOrCtrl+M',\n\t      role: 'minimize'\n\t    }, {\n\t      label: 'Close',\n\t      accelerator: 'CmdOrCtrl+W',\n\t      role: 'close'\n\t    }]\n\t  }, {\n\t    label: 'Help',\n\t    role: 'help',\n\t    submenu: [{\n\t      label: 'Learn More',\n\t      click: function click() {\n\t        _electron.shell.openExternal('http://blockstack.org');\n\t      }\n\t    }, {\n\t      label: 'Documentation',\n\t      click: function click() {\n\t        _electron.shell.openExternal('http://blockstack.org/docs');\n\t      }\n\t    }, {\n\t      label: 'Community Discussions',\n\t      click: function click() {\n\t        _electron.shell.openExternal('http://chat.blockstack.org');\n\t      }\n\t    }, {\n\t      label: 'Search Issues',\n\t      click: function click() {\n\t        _electron.shell.openExternal('https://github.com/blockstack/blockstack-desktop-app');\n\t      }\n\t    }]\n\t  }];\n\t\n\t  if (process.platform === 'darwin') {\n\t    template.unshift({\n\t      label: 'Blockstack',\n\t      submenu: [{\n\t        label: 'About Blockstack',\n\t        role: 'about'\n\t      }, {\n\t        type: 'separator'\n\t      }, {\n\t        label: 'Services',\n\t        role: 'services',\n\t        submenu: []\n\t      }, {\n\t        type: 'separator'\n\t      }, {\n\t        label: 'Hide Blockstack',\n\t        accelerator: 'Command+H',\n\t        role: 'hide'\n\t      }, {\n\t        label: 'Hide Others',\n\t        accelerator: 'Command+Alt+H',\n\t        role: 'hideothers'\n\t      }, {\n\t        label: 'Show All',\n\t        role: 'unhide'\n\t      }, {\n\t        type: 'separator'\n\t      }, {\n\t        label: 'Quit',\n\t        accelerator: 'Command+Q',\n\t        click: function click() {\n\t          _electron.app.quit();\n\t        }\n\t      }]\n\t    });\n\t    template[3].submenu.push({\n\t      type: 'separator'\n\t    }, {\n\t      label: 'Bring All to Front',\n\t      role: 'front'\n\t    });\n\t  }\n\t\n\t  var menu = _electron.Menu.buildFromTemplate(template);\n\t  _electron.Menu.setApplicationMenu(menu);\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"electron\");\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** main.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 14b9df39d2e71af3ad7c\n **/","import { app, BrowserWindow, crashReporter, Menu, screen, shell } from 'electron';\n\ncrashReporter.start({\n  productName: 'Blockstack',\n  companyName: 'Blockstack Labs',\n  submitURL: 'http://127.0.0.1:3000',\n  autoSubmit: false\n});\n\nif (process.env.NODE_ENV === 'development') {\n  require('electron-debug')();\n}\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\napp.once('ready', () => {\n  let size = screen.getPrimaryDisplay().workAreaSize;\n  let mainWindow = new BrowserWindow({\n    width: 1200,\n    height: 900,\n    minWidth: 1100,\n    minHeight: 450,\n    frame: false,\n    titleBarStyle: 'hidden'\n  });\n\n  mainWindow.loadURL(`file://${__dirname}/app/app.html`);\n\n  mainWindow.webContents.on('did-finish-load', () => {\n    mainWindow.show();\n    mainWindow.focus();\n  });\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n\n  if (process.env.NODE_ENV === 'development') {\n    mainWindow.openDevTools();\n  }\n\n  let template = [\n    {\n      label: 'Edit',\n      submenu: [\n        {\n          label: 'Undo',\n          accelerator: 'CmdOrCtrl+Z',\n          role: 'undo'\n        },\n        {\n          label: 'Redo',\n          accelerator: 'Shift+CmdOrCtrl+Z',\n          role: 'redo'\n        },\n        {\n          type: 'separator'\n        },\n        {\n          label: 'Cut',\n          accelerator: 'CmdOrCtrl+X',\n          role: 'cut'\n        },\n        {\n          label: 'Copy',\n          accelerator: 'CmdOrCtrl+C',\n          role: 'copy'\n        },\n        {\n          label: 'Paste',\n          accelerator: 'CmdOrCtrl+V',\n          role: 'paste'\n        },\n        {\n          label: 'Select All',\n          accelerator: 'CmdOrCtrl+A',\n          role: 'selectall'\n        }\n      ]\n    },\n    {\n      label: 'View',\n      submenu: [\n        {\n          label: 'Reload',\n          accelerator: 'CmdOrCtrl+R',\n          click: function (item, focusedWindow) {\n            if (focusedWindow) focusedWindow.reload()\n          }\n        },\n        {\n          label: 'Toggle Full Screen',\n          accelerator: (function () {\n            return (process.platform === 'darwin') ? 'Ctrl+Command+F' : 'F11'\n          })(),\n          click: function (item, focusedWindow) {\n            if (focusedWindow) focusedWindow.setFullScreen(!focusedWindow.isFullScreen())\n          }\n        },\n        {\n          label: 'Toggle Developer Tools',\n          accelerator: (function () {\n            return (process.platform === 'darwin') ? 'Alt+Command+I' : 'Ctrl+Shift+I'\n          })(),\n          click: function (item, focusedWindow) {\n            if (focusedWindow) focusedWindow.toggleDevTools()\n          }\n        }\n      ]\n    },\n    {\n      label: 'Window',\n      role: 'window',\n      submenu: [\n        {\n          label: 'Minimize',\n          accelerator: 'CmdOrCtrl+M',\n          role: 'minimize'\n        },\n        {\n          label: 'Close',\n          accelerator: 'CmdOrCtrl+W',\n          role: 'close'\n        }\n      ]\n    },\n    {\n      label: 'Help',\n      role: 'help',\n      submenu: [\n        {\n          label: 'Learn More',\n          click: function () {\n            shell.openExternal('http://blockstack.org')\n          }\n        },\n        {\n          label: 'Documentation',\n          click: function () {\n            shell.openExternal('http://blockstack.org/docs')\n          }\n        },\n        {\n          label: 'Community Discussions',\n          click: function () {\n            shell.openExternal('http://chat.blockstack.org')\n          }\n        },\n        {\n          label: 'Search Issues',\n          click: function () {\n            shell.openExternal('https://github.com/blockstack/blockstack-desktop-app')\n          }\n        }\n      ]\n    }\n  ]\n\n  if (process.platform === 'darwin') {\n    template.unshift({\n      label: 'Blockstack',\n      submenu: [\n        {\n          label: 'About Blockstack',\n          role: 'about'\n        },\n        {\n          type: 'separator'\n        },\n        {\n          label: 'Services',\n          role: 'services',\n          submenu: []\n        },\n        {\n          type: 'separator'\n        },\n        {\n          label: 'Hide Blockstack',\n          accelerator: 'Command+H',\n          role: 'hide'\n        },\n        {\n          label: 'Hide Others',\n          accelerator: 'Command+Alt+H',\n          role: 'hideothers'\n        },\n        {\n          label: 'Show All',\n          role: 'unhide'\n        },\n        {\n          type: 'separator'\n        },\n        {\n          label: 'Quit',\n          accelerator: 'Command+Q',\n          click: function () { app.quit() }\n        }\n      ]\n    })\n    template[3].submenu.push(\n      {\n        type: 'separator'\n      },\n      {\n        label: 'Bring All to Front',\n        role: 'front'\n      }\n    )\n  }\n\n  let menu = Menu.buildFromTemplate(template)\n  Menu.setApplicationMenu(menu)\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./main.development.js\n **/","module.exports = require(\"electron\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"electron\"\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}